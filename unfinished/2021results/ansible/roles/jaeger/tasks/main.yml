---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: Create the jaeger group
  group:
    name: "{{ jaeger_system_group }}"
    state: present
    system: true

- name: Create the jaeger user
  user:
    name: "{{ jaeger_system_user }}"
    groups: "{{ jaeger_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: create jaeger configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ jaeger_system_user }}"
    group: "{{ jaeger_system_group }}"
    mode: 0770
  with_items:
    - "{{ jaeger_config_dir }}"

- block:
    - name: If rules file exists
      stat: 
        path: "/tmp/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}.tar.gz"
      register: is_archive_exists

    - name: Download jaeger binary to local folder
      become: false
      get_url:
        url: "https://github.com/jaegertracing/jaeger/releases/download/v{{ jaeger_version }}/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}.tar.gz"
        dest: "/tmp/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}.tar.gz"
        #checksum: "sha256:{{ jaeger_checksum }}"
        mode: '0644'
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 2
      check_mode: false
      when: is_archive_exists.stat.exists == true

    - name: Unpack jaeger binary
      become: false
      unarchive:
        src: "/tmp/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}/jaeger"
        remote_src: yes
      check_mode: false

    - name: Propagate jaeger binaries
      copy:
        src: "/tmp/jaeger-{{ jaeger_version }}-linux-{{ go_arch }}/jaeger-all-in-one"
        dest: "{{ _jaeger_binary_install_dir }}/jaeger-all-in-one"
        mode: 0755
        owner: root
        group: root
        remote_src: yes
      notify: restart jaeger
      when: not ansible_check_mode
  when: jaeger_binary_local_dir | length == 0

- name: propagate locally distributed jaeger binary
  copy:
    src: "{{ jaeger_binary_local_dir }}/jaeger-all-in-one"
    dest: "{{ _jaeger_binary_install_dir }}/jaeger-all-in-one"
    mode: 0755
    owner: root
    group: root
  when: jaeger_binary_local_dir | length > 0
  notify: restart jaeger

- name: Copy the jaeger systemd service file
  template:
    src: jaeger.service.j2
    dest: /etc/systemd/system/jaeger.service
    owner: root
    group: root
    mode: 0644
  notify: restart jaeger

- name: Ensure jaeger is enabled on boot
  become: true
  systemd:
    daemon_reload: true
    name: jaeger
    enabled: true
  tags:
    - jaeger_run